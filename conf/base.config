/*
 * -------------------------------------------------
 *  nf-core/rnafusion Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

params {
    versions {
    arriba = '1.1.0'
    ericscript = '0.5.5'
    fusioncatcher = '1.20'
    fusion_inspector = '2.2.1-star2.7.0f'
    pizzly = '0.37.3'
    squid = '1.5-star2.7.0f'
    star_fusion = '1.6.0'
  }
}

process {
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 7.GB * task.attempt, 'memory' ) }
  time = { check_max( 4.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  withLabel:process_low {
    cpus = { check_max( 2 * task.attempt, 'cpus' ) }
    memory = { check_max( 14.GB * task.attempt, 'memory' ) }
    time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withLabel:process_medium {
    cpus = { check_max( 6 * task.attempt, 'cpus' ) }
    memory = { check_max( 42.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }
  withLabel:process_high {
    cpus = { check_max( 12 * task.attempt, 'cpus' ) }
    memory = { check_max( 84.GB * task.attempt, 'memory' ) }
    time = { check_max( 10.h * task.attempt, 'time' ) }
  }
  withLabel:process_long {
    time = { check_max( 20.h * task.attempt, 'time' ) }
  }
  withName:get_software_versions {
    cache = false
  }

  // Fusion tools
  withName:"arriba|arriba_visualization" {
    container = "nfcore/rnafusion:arriba_${params.versions.arriba}"
  }
  withName:ericscript {
    container = "nfcore/rnafusion:ericscript_${params.versions.ericscript}"
  }
  withName:fusioncatcher {
    container = "nfcore/rnafusion:fusioncatcher_${params.versions.fusioncatcher}"
  }
  withName:fusion_inspector {
    container = "nfcore/rnafusion:fusion-inspector_${params.versions.fusion_inspector}"
  }
  withName:pizzly {
    container = "nfcore/rnafusion:pizzly_${params.versions.pizzly}"
  }
  withName:squid {
    container = "nfcore/rnafusion:squid_${params.versions.squid}"
  }
  withName:"star_fusion" {
    container = "nfcore/rnafusion:star-fusion_${params.versions.star_fusion}"
  }
}